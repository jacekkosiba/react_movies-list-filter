{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","searchTextInString.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","searchTextInString","string","text","toLowerCase","includes","trim","App","useState","query","setQuery","moviesFromServer","visibleMovies","setVisibleMovies","useEffect","filteredMovies","filter","isInTitle","isInDescription","htmlFor","type","id","placeholder","value","onChange","event","target","trimStart","ReactDOM","render","document","getElementById"],"mappings":"ytEAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BChCGQ,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCFbC,EARX,SAACC,EAAgBC,GACjB,OAAOD,EACJE,cACAC,SACCF,EAAKC,cAAcE,SCGdC,EAAU,WACrB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAASG,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAiBA,OAXAC,qBAAU,WACR,IAAMC,EAAiBJ,EAAiBK,QAAO,SAAA5B,GAC7C,IAAM6B,EAAYhB,EAAmBb,EAAMI,MAAOiB,GAC5CS,EAAkBjB,EAAmBb,EAAMG,YAAakB,GAE9D,OAAQQ,GAAaC,IAAoB9B,KAG3CyB,EAAiBE,KAChB,CAACN,IAGF,sBAAKhB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAO0B,QAAQ,eAAe1B,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLC,GAAG,eACH5B,UAAU,QACV6B,YAAY,mBACZC,MAAOd,EACPe,SAhC6C,SAACC,GAC1Df,EAASe,EAAMC,OAAOH,MAAMI,uBAqCxB,cAAC,EAAD,CAAY7B,OAAQc,OAGtB,qBAAKnB,UAAU,UAAf,mCCjDNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3f5f2509.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","const searchTextInString\n  = (string: string, text: string): boolean => {\n    return string\n      .toLowerCase()\n      .includes(\n        text.toLowerCase().trim(),\n      );\n  };\n\nexport default searchTextInString;\n","import {\n  FC, useState, ChangeEventHandler, useEffect,\n} from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport searchTextInString from './searchTextInString';\n\nexport const App: FC = () => {\n  const [query, setQuery] = useState('');\n  const [visibleMovies, setVisibleMovies] = useState(moviesFromServer);\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    setQuery(event.target.value.trimStart());\n  };\n\n  useEffect(() => {\n    const filteredMovies = moviesFromServer.filter(movie => {\n      const isInTitle = searchTextInString(movie.title, query);\n      const isInDescription = searchTextInString(movie.description, query);\n\n      return (isInTitle || isInDescription) && movie;\n    });\n\n    setVisibleMovies(filteredMovies);\n  }, [query]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={query}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}